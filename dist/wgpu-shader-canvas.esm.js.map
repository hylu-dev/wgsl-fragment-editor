{"version":3,"file":"wgpu-shader-canvas.esm.js","sources":["../web/shader-canvas.js"],"sourcesContent":["/**\n * Simple Shader Canvas\n * Usage: \n *   new ShaderCanvas('#app-container')\n *   new ShaderCanvas('#app-container', { initialShader: 'your shader code here' })\n */\nclass ShaderCanvas {\n    constructor(selector, options = {}) {\n        this.selector = selector;\n        this.container = null;\n        this.canvas = null;\n        this.codeEditor = null;\n        this.statusElement = null;\n        this.wasmModule = null;\n        this.isInitialized = false;\n        \n        // Extract options\n        this.initialShader = options.initialShader || this.getDefaultShader();\n\n        this.init();\n    }\n\n    getDefaultShader() {\n        return `// Fragment shader - write your complete @fragment function\n// The vertex shader and structs will be added automatically\n\n@fragment\nfn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {\n    let uv = in.uv * 2.0 - 1.0;\n    var dist = sin(length(uv * 8.0 * PI) + u_time.t);\n    dist += sin(atan2(uv.y, uv.x) * 8.0 + u_time.t * 0.5);\n    let color = vec4<f32>(dist, dist, dist, 1.0);\n    return color;\n}`;\n    }\n\n    getWasmModulePath() {\n        // Try to determine the correct path for the WASM module\n        // This handles both local development and GitHub Pages deployment scenarios\n        \n        // First, try to get the current script's base URL\n        const currentScript = document.currentScript;\n        if (currentScript) {\n            const scriptSrc = currentScript.src;\n            const baseUrl = scriptSrc.substring(0, scriptSrc.lastIndexOf('/'));\n            return `${baseUrl}/wgpu_shader_canvas.js`;\n        }\n        \n        // Fallback: use relative path (should work in most cases)\n        return './wgpu_shader_canvas.js';\n    }\n\n    async init() {\n        try {\n            await this.createLayout();\n            await this.loadWasmModule();\n            this.setupEventListeners();\n            this.isInitialized = true;\n            console.log('ShaderCanvasUI initialized successfully');\n        } catch (error) {\n            console.error('Failed to initialize ShaderCanvasUI:', error);\n            throw error;\n        }\n    }\n\n    async createLayout() {\n        // Get the target container\n        this.container = document.querySelector(this.selector);\n        if (!this.container) {\n            throw new Error(`Element with selector \"${this.selector}\" not found`);\n        }\n\n        // Clear existing content and add the shader canvas layout\n        this.container.innerHTML = `\n            <div class=\"code-panel\">\n                <div class=\"code-editor-container\">\n                    <textarea id=\"shader-text\" \n                              class=\"code-editor\" \n                              placeholder=\"Paste your fragment shader code here...\">${this.initialShader}</textarea>\n                </div>\n                <div class=\"canvas-panel\">\n                    <canvas id=\"canvas\" class=\"shader-canvas\"></canvas>\n                    <div class=\"shader-status\" id=\"shader-status\"></div>\n                </div>\n            </div>\n        `;\n\n        // Get references to elements\n        this.canvas = document.getElementById('canvas');\n        this.codeEditor = document.getElementById('shader-text');\n        this.statusElement = document.getElementById('shader-status');\n    }\n\n    async loadWasmModule() {\n        try {\n            // Try to determine the correct path for the WASM module\n            const wasmPath = this.getWasmModulePath();\n            this.wasmModule = await import(wasmPath);\n            const { load_shader_from_url, load_shader_from_text, reload_shader, get_current_shader_text } = this.wasmModule;\n\n            // Initialize WASM\n            const init = this.wasmModule.default;\n            try {\n                await init();\n            } catch (wasmError) {\n                // WASM initialization might throw \"exceptions for control flow\" - this is normal\n            }\n\n            // Store the functions for later use\n            this.wasmFunctions = {\n                load_shader_from_text,\n                reload_shader,\n                get_current_shader_text\n            };\n\n            console.log('WASM module loaded successfully');\n        } catch (error) {\n            console.error('Failed to load WASM module:', error);\n            throw error;\n        }\n    }\n\n    setupEventListeners() {\n        // Auto-load shader on text change\n        this.codeEditor.addEventListener('input', (e) => {\n            const text = e.target.value;\n            this.loadShader(text);\n        });\n\n        // Load initial shader immediately\n        const initialShader = this.codeEditor.value;\n        this.loadShader(initialShader);\n\n        // Add hover behavior for error status\n        this.statusElement.addEventListener('mouseenter', () => {\n            const detailedError = this.statusElement.dataset.detailedError;\n            if (detailedError) {\n                this.statusElement.textContent = detailedError;\n            }\n        });\n\n        this.statusElement.addEventListener('mouseleave', () => {\n            // Reset to original message\n            this.statusElement.textContent = 'Shader Error';\n        });\n    }\n\n    updateStatus(message, isError = false, detailedError = '') {\n        this.statusElement.textContent = message;\n        this.statusElement.className = 'shader-status';\n        \n        if (isError) {\n            this.statusElement.classList.add('show');\n            // Store the detailed error for hover display\n            this.statusElement.dataset.detailedError = detailedError || message;\n        } else {\n            // Hide status for success (no error)\n            this.statusElement.classList.remove('show');\n            this.statusElement.dataset.detailedError = '';\n        }\n    }\n\n    wrapFragmentShader(fragmentCode) {\n        // Always wrap the fragment code - assume user only writes fragment shader\n        return this.createCompleteShader(fragmentCode);\n    }\n\n    createCompleteShader(fragmentCode) {\n        const vertexShader = `// Vertex shader\n\nconst PI: f32 = 3.1415926535;\n\n// Time uniform - 16-byte aligned\nstruct TimeUniform {\n    t: f32,\n    _padding: f32,\n    _padding2: f32,\n    _padding3: f32,\n}\n\n@group(0) @binding(0)\nvar<uniform> camera: mat4x4<f32>;\n\n@group(0) @binding(1)\nvar<uniform> u_time: TimeUniform;\n\nstruct VertexInput {\n    @location(0) pos: vec3<f32>,\n    @location(1) color: vec3<f32>,\n};\n\nstruct VertexOutput {\n    @builtin(position) clip_position: vec4<f32>,\n    @location(0) uv: vec2<f32>,\n    @location(1) color: vec3<f32>,\n};\n\n@vertex\nfn vs_main(\n    model: VertexInput,\n) -> VertexOutput {\n    var out: VertexOutput;\n    out.color = model.color;\n    out.clip_position = vec4<f32>(model.pos, 1.0);\n    out.uv = vec2<f32>(model.pos.x * 0.5 + 0.5, model.pos.y * 0.5 + 0.5);\n    return out;\n}\n\n${fragmentCode}`;\n\n        return vertexShader;\n    }\n\n\n    loadShader(text) {\n        console.log(\"Attempting to load shader\");\n        try {\n            // Wrap the fragment shader code if needed\n            const completeShader = this.wrapFragmentShader(text);\n            \n            // Attempt to load the shader - Rust throws on error, returns undefined on success\n            this.wasmFunctions.load_shader_from_text(completeShader);\n            \n            // If we get here, the shader loaded successfully\n            this.updateStatus('Shader Error', false); // Hide status on success\n            //console.log(\"Shader loaded successfully\");\n        } catch (error) {\n            // Shader compilation failed - show the error message with details\n            const errorMessage = error.message || error.toString() || 'Unknown shader error';\n            this.updateStatus('Shader Error', true, errorMessage);\n            console.warn(\"Shader compilation error:\", error);\n        }\n    }\n\n    reloadDefaultShader() {\n        try {\n            this.wasmFunctions.reload_shader();\n            \n            // If we get here, the reload was successful\n            this.updateStatus('✓ Default shader reloaded', false);\n            console.log(\"Default shader reloaded\");\n            \n            // Reset to initial fragment shader code\n            this.codeEditor.value = this.initialShader;\n        } catch (error) {\n            // Reload failed - show the error message\n            this.updateStatus(`✗ Reload failed: ${error.message || error}`, true);\n            //console.error(\"Failed to reload shader:\", error);\n        }\n    }\n\n\n    // Public API methods\n    getCanvas() {\n        return this.canvas;\n    }\n\n    getCodeEditor() {\n        return this.codeEditor;\n    }\n\n    getStatusElement() {\n        return this.statusElement;\n    }\n\n    setShaderCode(code) {\n        this.codeEditor.value = code;\n        this.codeEditor.dispatchEvent(new Event('input'));\n    }\n\n    getShaderCode() {\n        return this.codeEditor.value;\n    }\n\n    setInitialShader(shaderCode) {\n        this.initialShader = shaderCode;\n    }\n\n    destroy() {\n        if (this.shaderLoadTimeout) {\n            clearTimeout(this.shaderLoadTimeout);\n        }\n        if (this.container && this.container.parentNode) {\n            this.container.parentNode.removeChild(this.container);\n        }\n    }\n}\n\n// Export for use in other modules\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = ShaderCanvas;\n} else if (typeof window !== 'undefined') {\n    window.ShaderCanvas = ShaderCanvas;\n}\n\n// ES module export\nexport default ShaderCanvas;\n"],"names":[],"mappings":"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"}